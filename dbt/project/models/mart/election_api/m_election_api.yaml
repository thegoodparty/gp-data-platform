version: 2

models:
  - name: m_election_api__candidacy
    description: "Intermediate model that maps positions to places from the BallotReady API"
    columns:
      - name: id
        description: "UUID of the candidacy"
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

      - name: br_database_id
        description: "Hash ID of the candidacy"
        tests:
          - relationships:
              to: ref('int__ballotready_candidacy')
              field: database_id

  - name: m_election_api__race
    description: "Intermediate model that enhances the race data from the BallotReady API"
    columns:
      - name: id
        description: "UUID of the race"
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      - name: br_database_id
        description: "Database ID of the `race` from BallotReady"
        tests:
          - relationships:
              to: ref('int__enhanced_race')
              field: br_database_id
    tests:
      - dbt_utils.equal_rowcount:
          compare_model: ref('int__enhanced_race')

  - name: m_election_api__place
    description: "Intermediate model that represents geographic locations from the BallotReady API"
    columns:
      - name: id
        description: "UUID of the place"
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

      - name: br_position_database_id
        description: "Database ID of the `place` from BallotReady"
        tests:
          - relationships:
              to: ref('int__enhanced_position')
              field: br_database_id

  - name: m_election_api__position
    description: "Intermediate model that represents political positions/offices from the BallotReady API"
    columns:
      - name: id
        description: "UUID of the position"
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

      - name: br_database_id
        description: "Database ID of the `place` from BallotReady"
        tests:
          - relationships:
              to: ref('int__ballotready_position')
              field: br_database_id
