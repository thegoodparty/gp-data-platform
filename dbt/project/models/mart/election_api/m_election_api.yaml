version: 2

models:
  - name: m_election_api__candidacy
    description: "Mart model that serves the Election API"
    columns:
      - name: br_database_id
        description: "Database ID of the candidacy"
        tests:
          - not_null
          - unique
          - relationships:
              to: ref('int__ballotready_candidacy')
              field: database_id
      - name: id
        description: "UUID of the place"
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

  - name: m_election_api__district
    description: "Mart model that serves districts to the Election API, part of projected turnout"
    columns:
      - name: id
        description: "UUID of the district"
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      - name: state
        description: "State postal code"
        tests:
          - not_null
          - accepted_values:
              values: [
                "AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA",
                "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD",
                "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ",
                "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC",
                "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY",
                "DC", "US"
              ]
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - state
            - l2_district_type
            - l2_district_name

  - name: m_election_api__issue
    description: "Mart model that serves the Election API"
    columns:
      - name: id
        description: "UUID of the issue"
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      - name: br_database_id
        description: "Database ID of the `issue` from BallotReady"
        tests:
          - not_null
          - unique
          - relationships:
              to: ref('int__ballotready_issue')
              field: database_id
    tests:
      - dbt_utils.equal_rowcount:
          compare_model: ref('int__ballotready_issue')

  - name: m_election_api__place
    description: "Mart model that serves the Election API"
    columns:
      - name: id
        description: "UUID of the place"
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      - name: slug
        description: "Slug of the place"
        tests:
          - not_null
          - unique
      - name: br_database_id
        description: "Database ID of the `place` from BallotReady"
        tests:
          - relationships:
              to: ref('int__enhanced_place')
              field: br_database_id
      - name: geoid
        description: "Geo ID of the place"
        tests:
          - not_null
          - unique

  - name: m_election_api__position
    description: "Mart model that serves the Election API"
    columns:
      - name: id
        description: "UUID of the position"
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      - name: br_database_id
        description: "Database ID of the `position` from BallotReady"
        tests:
          - not_null
          - unique
      - name: br_position_id
        description: "BallotReady position ID"
        tests:
          - not_null
          - unique
      - name: state
        description: "State postal code"
        tests:
          - not_null
          - accepted_values:
              values: [
                "AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA",
                "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD",
                "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ",
                "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC",
                "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY",
                "DC", "US"
              ]
      - name: district_id
        description: "UUID of the district"
        tests:
          - not_null
          - relationships:
              to: ref('m_election_api__district')
              field: id

  - name: m_election_api__projected_turnout
    description: Turnout projections data load from model predictions
    columns:
      - name: id
        description: "UUID of the projected turnout"
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      - name: election_code
        description: The election code
        tests:
          - not_null
          - accepted_values:
              values: ["General", "LocalOrMunicipal", "ConsolidatedGeneral"]
      - name: model_version
        description: The model version
        tests:
          - not_null
      - name: district_id
        description: "UUID of the district"
        tests:
          - not_null
          - relationships:
              to: ref('m_election_api__district')
              field: id
      - name: projected_turnout
        description: The projected turnout
        tests:
          - not_null
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - district_id
            - election_year
            - election_code
            - model_version

  - name: m_election_api__race
    description: "Mart model that serves the Election API"
    columns:
      - name: id
        description: "UUID of the race"
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      - name: br_database_id
        description: "Database ID of the `race` from BallotReady"
        tests:
          - relationships:
              to: ref('int__enhanced_race')
              field: br_database_id

  - name: m_election_api__stance
    description: "Mart model that serves the Election API"
    columns:
      - name: id
        description: "UUID of the stance"
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      - name: br_database_id
        description: "Database ID of the `stance` from BallotReady"
        tests:
          - not_null
          - unique
      - name: issue_id
        description: "UUID of the issue"
        tests:
          - not_null
          - relationships:
              to: ref('m_election_api__issue')
              field: id
      - name: candidacy_id
        description: "UUID of the candidacy"
        tests:
          - not_null
          - relationships:
              to: ref('m_election_api__candidacy')
              field: id
