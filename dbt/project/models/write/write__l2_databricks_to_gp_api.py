import logging
from typing import Any, Dict, List, Tuple

import psycopg2
from pyspark.sql import DataFrame, SparkSession
from pyspark.sql.functions import col, monotonically_increasing_id
from pyspark.sql.types import (
    IntegerType,
    StringType,
    StructField,
    StructType,
    TimestampType,
)

UPSERT_QUERY = """
    INSERT INTO {db_schema}."{table_name}" (
        "LALVOTERID",
        "Voters_Active",
        "Voters_StateVoterID",
        "Voters_CountyVoterID",
        "VoterTelephones_LandlineFormatted",
        "VoterTelephones_LandlineConfidenceCode",
        "VoterTelephones_CellPhoneFormatted",
        "VoterTelephones_CellConfidenceCode",
        "Voters_FirstName",
        "Voters_MiddleName",
        "Voters_LastName",
        "Voters_NameSuffix",
        "Residence_Addresses_AddressLine",
        "Residence_Addresses_ExtraAddressLine",
        "Residence_Addresses_City",
        "Residence_Addresses_State",
        "Residence_Addresses_Zip",
        "Residence_Addresses_ZipPlus4",
        "Residence_Addresses_DPBC",
        "Residence_Addresses_CheckDigit",
        "Residence_Addresses_HouseNumber",
        "Residence_Addresses_Designator",
        "Residence_Addresses_SuffixDirection",
        "Residence_Addresses_ApartmentNum",
        "Residence_Addresses_ApartmentType",
        "Residence_Addresses_CassErrStatCode",
        "Voters_SequenceZigZag",
        "Voters_SequenceOddEven",
        "Residence_Addresses_Latitude",
        "Residence_Addresses_Longitude",
        "Residence_Addresses_GeoHash",
        "Residence_Addresses_LatLongAccuracy",
        "Residence_HHParties_Description",
        "Mailing_Addresses_AddressLine",
        "Mailing_Addresses_ExtraAddressLine",
        "Mailing_Addresses_City",
        "Mailing_Addresses_State",
        "Mailing_Addresses_Zip",
        "Mailing_Addresses_ZipPlus4",
        "Mailing_Addresses_DPBC",
        "Mailing_Addresses_CheckDigit",
        "Mailing_Addresses_HouseNumber",
        "Mailing_Addresses_PrefixDirection",
        "Mailing_Addresses_StreetName",
        "Mailing_Addresses_Designator",
        "Mailing_Addresses_SuffixDirection",
        "Mailing_Addresses_ApartmentNum",
        "Mailing_Addresses_ApartmentType",
        "Mailing_Addresses_CassErrStatCode",
        "Mailing_Families_FamilyID",
        "Mailing_Families_HHCount",
        "Mailing_HHGender_Description",
        "Mailing_HHParties_Description",
        "Voters_Age",
        "Voters_Gender",
        "DateConfidence_Description",
        "Parties_Description",
        "VoterParties_Change_Changed_Party",
        "Ethnic_Description",
        "EthnicGroups_EthnicGroup1Desc",
        "CountyEthnic_LALEthnicCode",
        "CountyEthnic_Description",
        "Religions_Description",
        "Voters_CalculatedRegDate",
        "Voters_OfficialRegDate",
        "Voters_PlaceOfBirth",
        "Languages_Description",
        "AbsenteeTypes_Description",
        "MilitaryStatus_Description",
        "MaritalStatus_Description",
        "Voters_MovedFrom_State",
        "Voters_MovedFrom_Date",
        "Voters_MovedFrom_Party_Description",
        "Voters_VotingPerformanceEvenYearGeneral",
        "Voters_VotingPerformanceEvenYearPrimary",
        "Voters_VotingPerformanceEvenYearGeneralAndPrimary",
        "Voters_VotingPerformanceMinorElection",
        "General_2026",
        "Primary_2026",
        "OtherElection_2026",
        "AnyElection_2025",
        "General_2024",
        "Primary_2024",
        "PresidentialPrimary_2024",
        "OtherElection_2024",
        "AnyElection_2023",
        "General_2022",
        "Primary_2022",
        "OtherElection_2022",
        "AnyElection_2021",
        "General_2020",
        "Primary_2020",
        "PresidentialPrimary_2020",
        "OtherElection_2020",
        "AnyElection_2019",
        "General_2018",
        "Primary_2018",
        "OtherElection_2018",
        "AnyElection_2017",
        "General_2016",
        "Primary_2016",
        "PresidentialPrimary_2016",
        "OtherElection_2016",
        "US_Congressional_District",
        "AddressDistricts_Change_Changed_CD",
        "State_Senate_District",
        "AddressDistricts_Change_Changed_SD",
        "State_House_District",
        "AddressDistricts_Change_Changed_HD",
        "State_Legislative_District",
        "AddressDistricts_Change_Changed_LD",
        "County",
        "Voters_FIPS",
        "AddressDistricts_Change_Changed_County",
        "Precinct",
        "County_Legislative_District",
        "City",
        "City_Council_Commissioner_District",
        "County_Commissioner_District",
        "County_Supervisorial_District",
        "City_Mayoral_District",
        "Town_District",
        "Town_Council",
        "Village",
        "Township",
        "Borough",
        "Hamlet_Community_Area",
        "City_Ward",
        "Town_Ward",
        "Township_Ward",
        "Village_Ward",
        "Borough_Ward",
        "Board_of_Education_District",
        "Board_of_Education_SubDistrict",
        "City_School_District",
        "College_Board_District",
        "Community_College_Commissioner_District",
        "Community_College_SubDistrict",
        "County_Board_of_Education_District",
        "County_Board_of_Education_SubDistrict",
        "County_Community_College_District",
        "County_Superintendent_of_Schools_District",
        "County_Unified_School_District",
        "District_Attorney",
        "Education_Commission_District",
        "Educational_Service_District",
        "Election_Commissioner_District",
        "Elementary_School_District",
        "Elementary_School_SubDistrict",
        "Exempted_Village_School_District",
        "High_School_District",
        "High_School_SubDistrict",
        "Judicial_Appellate_District",
        "Judicial_Circuit_Court_District",
        "Judicial_County_Board_of_Review_District",
        "Judicial_County_Court_District",
        "Judicial_District",
        "Judicial_District_Court_District",
        "Judicial_Family_Court_District",
        "Judicial_Jury_District",
        "Judicial_Juvenile_Court_District",
        "Judicial_Magistrate_Division",
        "Judicial_Sub_Circuit_District",
        "Judicial_Superior_Court_District",
        "Judicial_Supreme_Court_District",
        "Middle_School_District",
        "Municipal_Court_District",
        "Proposed_City_Commissioner_District",
        "Proposed_Elementary_School_District",
        "Proposed_Unified_School_District",
        "Regional_Office_of_Education_District",
        "School_Board_District",
        "School_District",
        "School_District_Vocational",
        "School_Facilities_Improvement_District",
        "School_Subdistrict",
        "Service_Area_District",
        "Superintendent_of_Schools_District",
        "Unified_School_District",
        "Unified_School_SubDistrict",
        "Coast_Water_District",
        "Consolidated_Water_District",
        "County_Water_District",
        "County_Water_Landowner_District",
        "County_Water_SubDistrict",
        "Metropolitan_Water_District",
        "Mountain_Water_District",
        "Municipal_Water_District",
        "Municipal_Water_SubDistrict",
        "River_Water_District",
        "Water_Agency",
        "Water_Agency_SubDistrict",
        "Water_Conservation_District",
        "Water_Conservation_SubDistrict",
        "Water_Control__Water_Conservation",
        "Water_Control__Water_Conservation_SubDistrict",
        "Water_District",
        "Water_Public_Utility_District",
        "Water_Public_Utility_Subdistrict",
        "Water_Replacement_District",
        "Water_Replacement_SubDistrict",
        "Water_SubDistrict",
        "County_Fire_District",
        "Fire_District",
        "Fire_Maintenance_District",
        "Fire_Protection_District",
        "Fire_Protection_SubDistrict",
        "Fire_Protection_Tax_Measure_District",
        "Fire_Service_Area_District",
        "Fire_SubDistrict",
        "Independent_Fire_District",
        "Proposed_Fire_District",
        "Unprotected_Fire_District",
        "Bay_Area_Rapid_Transit",
        "Metro_Transit_District",
        "Rapid_Transit_District",
        "Rapid_Transit_SubDistrict",
        "Transit_District",
        "Transit_SubDistrict",
        "Community_Service_District",
        "Community_Service_SubDistrict",
        "County_Service_Area",
        "County_Service_Area_SubDistrict",
        "TriCity_Service_District",
        "Library_Services_District",
        "Airport_District",
        "Annexation_District",
        "Aquatic_Center_District",
        "Aquatic_District",
        "Assessment_District",
        "Bonds_District",
        "Career_Center",
        "Cemetery_District",
        "Central_Committee_District",
        "Chemical_Control_District",
        "Committee_Super_District",
        "Communications_District",
        "Community_College_At_Large",
        "Community_Council_District",
        "Community_Council_SubDistrict",
        "Community_Facilities_District",
        "Community_Facilities_SubDistrict",
        "Community_Hospital_District",
        "Community_Planning_Area",
        "Congressional_Township",
        "Conservation_District",
        "Conservation_SubDistrict",
        "Control_Zone_District",
        "Corrections_District",
        "County_Hospital_District",
        "County_Library_District",
        "County_Memorial_District",
        "County_Paramedic_District",
        "County_Sewer_District",
        "Democratic_Convention_Member",
        "Democratic_Zone",
        "Designated_Market_Area_DMA",
        "Drainage_District",
        "Educational_Service_Subdistrict",
        "Emergency_Communication_911_District",
        "Emergency_Communication_911_SubDistrict",
        "Enterprise_Zone_District",
        "EXT_District",
        "Facilities_Improvement_District",
        "Flood_Control_Zone",
        "Forest_Preserve",
        "Garbage_District",
        "Geological_Hazard_Abatement_District",
        "Health_District",
        "Hospital_SubDistrict",
        "Improvement_Landowner_District",
        "Irrigation_District",
        "Irrigation_SubDistrict",
        "Island",
        "Land_Commission",
        "Landscaping_And_Lighting_Assessment_Distric",
        "Law_Enforcement_District",
        "Learning_Community_Coordinating_Council_District",
        "Levee_District",
        "Levee_Reconstruction_Assesment_District",
        "Library_District",
        "Library_SubDistrict",
        "Lighting_District",
        "Local_Hospital_District",
        "Local_Park_District",
        "Maintenance_District",
        "Master_Plan_District",
        "Memorial_District",
        "Metro_Service_District",
        "Metro_Service_Subdistrict",
        "Mosquito_Abatement_District",
        "Multi_township_Assessor",
        "Municipal_Advisory_Council_District",
        "Municipal_Utility_District",
        "Municipal_Utility_SubDistrict",
        "Museum_District",
        "Northeast_Soil_and_Water_District",
        "Open_Space_District",
        "Open_Space_SubDistrict",
        "Other",
        "Paramedic_District",
        "Park_Commissioner_District",
        "Park_District",
        "Park_SubDistrict",
        "Planning_Area_District",
        "Police_District",
        "Port_District",
        "Port_SubDistrict",
        "Power_District",
        "Proposed_City",
        "Proposed_Community_College",
        "Proposed_District",
        "Public_Airport_District",
        "Public_Regulation_Commission",
        "Public_Service_Commission_District",
        "Public_Utility_District",
        "Public_Utility_SubDistrict",
        "Reclamation_District",
        "Recreation_District",
        "Recreational_SubDistrict",
        "Republican_Area",
        "Republican_Convention_Member",
        "Resort_Improvement_District",
        "Resource_Conservation_District",
        "Road_Maintenance_District",
        "Rural_Service_District",
        "Sanitary_District",
        "Sanitary_SubDistrict",
        "Sewer_District",
        "Sewer_Maintenance_District",
        "Sewer_SubDistrict",
        "Snow_Removal_District",
        "Soil_And_Water_District",
        "Soil_And_Water_District_At_Large",
        "Special_Reporting_District",
        "Special_Tax_District",
        "Storm_Water_District",
        "Street_Lighting_District",
        "TV_Translator_District",
        "Unincorporated_District",
        "Unincorporated_Park_District",
        "Ute_Creek_Soil_District",
        "Vector_Control_District",
        "Vote_By_Mail_Area",
        "Wastewater_District",
        "Weed_District"
    )
    SELECT
        "LALVOTERID",
        "Voters_Active",
        "Voters_StateVoterID",
        "Voters_CountyVoterID",
        "VoterTelephones_LandlineFormatted",
        "VoterTelephones_LandlineConfidenceCode",
        "VoterTelephones_CellPhoneFormatted",
        "VoterTelephones_CellConfidenceCode",
        "Voters_FirstName",
        "Voters_MiddleName",
        "Voters_LastName",
        "Voters_NameSuffix",
        "Residence_Addresses_AddressLine",
        "Residence_Addresses_ExtraAddressLine",
        "Residence_Addresses_City",
        "Residence_Addresses_State",
        "Residence_Addresses_Zip",
        "Residence_Addresses_ZipPlus4",
        "Residence_Addresses_DPBC",
        "Residence_Addresses_CheckDigit"::INT,
        "Residence_Addresses_HouseNumber",
        "Residence_Addresses_Designator",
        "Residence_Addresses_SuffixDirection"::INT,
        "Residence_Addresses_ApartmentNum",
        "Residence_Addresses_ApartmentType",
        "Residence_Addresses_CassErrStatCode",
        "Voters_SequenceZigZag",
        "Voters_SequenceOddEven",
        "Residence_Addresses_Latitude",
        "Residence_Addresses_Longitude",
        NULL AS "Residence_Addresses_GeoHash",
        "Residence_Addresses_LatLongAccuracy",
        "Residence_HHParties_Description",
        "Mailing_Addresses_AddressLine",
        "Mailing_Addresses_ExtraAddressLine",
        "Mailing_Addresses_City",
        "Mailing_Addresses_State",
        "Mailing_Addresses_Zip",
        "Mailing_Addresses_ZipPlus4",
        "Mailing_Addresses_DPBC",
        "Mailing_Addresses_CheckDigit"::INT,
        "Mailing_Addresses_HouseNumber",
        "Mailing_Addresses_PrefixDirection"::INT,
        "Mailing_Addresses_StreetName",
        "Mailing_Addresses_Designator",
        "Mailing_Addresses_SuffixDirection"::INT,
        "Mailing_Addresses_ApartmentNum",
        "Mailing_Addresses_ApartmentType",
        "Mailing_Addresses_CassErrStatCode",
        "Mailing_Families_FamilyID",
        NULL AS "Mailing_Families_HHCount",
        NULL AS "Mailing_HHGender_Description",
        NULL AS "Mailing_HHParties_Description",
        "Voters_Age",
        "Voters_Gender",
        NULL AS "DateConfidence_Description",
        "Parties_Description",
        "VoterParties_Change_Changed_Party",
        "Ethnic_Description",
        "EthnicGroups_EthnicGroup1Desc",
        "CountyEthnic_LALEthnicCode",
        "CountyEthnic_Description",
        NULL AS "Religions_Description",
        "Voters_CalculatedRegDate"::DATE,
        "Voters_OfficialRegDate",
        "Voters_PlaceOfBirth",
        NULL AS "Languages_Description",
        "AbsenteeTypes_Description",
        NULL AS "MilitaryStatus_Description",
        NULL AS "MaritalStatus_Description",
        "Voters_MovedFrom_State",
        "Voters_MovedFrom_Date"::DATE,
        "Voters_MovedFrom_Party_Description",
        "Voters_VotingPerformanceEvenYearGeneral",
        "Voters_VotingPerformanceEvenYearPrimary",
        "Voters_VotingPerformanceEvenYearGeneralAndPrimary",
        "Voters_VotingPerformanceMinorElection",
        "General_2026",
        "Primary_2026",
        "OtherElection_2026",
        "AnyElection_2025",
        "General_2024",
        "Primary_2024",
        "PresidentialPrimary_2024",
        "OtherElection_2024",
        "AnyElection_2023",
        "General_2022",
        "Primary_2022",
        "OtherElection_2022",
        "AnyElection_2021",
        "General_2020",
        "Primary_2020",
        "PresidentialPrimary_2020",
        "OtherElection_2020",
        "AnyElection_2019",
        "General_2018",
        "Primary_2018",
        "OtherElection_2018",
        "AnyElection_2017",
        "General_2016",
        "Primary_2016",
        "PresidentialPrimary_2016",
        "OtherElection_2016",
        "US_Congressional_District",
        "AddressDistricts_Change_Changed_CD",
        "State_Senate_District",
        "AddressDistricts_Change_Changed_SD",
        "State_House_District",
        "AddressDistricts_Change_Changed_HD",
        "State_Legislative_District",
        "AddressDistricts_Change_Changed_LD",
        "County",
        "Voters_FIPS",
        "AddressDistricts_Change_Changed_County",
        "Precinct",
        "County_Legislative_District",
        "City",
        "City_Council_Commissioner_District",
        "County_Commissioner_District",
        "County_Supervisorial_District",
        "City_Mayoral_District",
        "Town_District",
        "Town_Council",
        "Village",
        "Township",
        "Borough",
        "Hamlet_Community_Area",
        "City_Ward",
        "Town_Ward",
        "Township_Ward",
        "Village_Ward",
        "Borough_Ward",
        "Board_of_Education_District",
        "Board_of_Education_SubDistrict",
        "City_School_District",
        "College_Board_District",
        "Community_College_Commissioner_District",
        "Community_College_SubDistrict",
        "County_Board_of_Education_District",
        "County_Board_of_Education_SubDistrict",
        "County_Community_College_District",
        "County_Superintendent_of_Schools_District",
        "County_Unified_School_District",
        "District_Attorney",
        "Education_Commission_District",
        "Educational_Service_District",
        "Election_Commissioner_District",
        "Elementary_School_District",
        "Elementary_School_SubDistrict",
        "Exempted_Village_School_District",
        "High_School_District",
        "High_School_SubDistrict",
        "Judicial_Appellate_District",
        "Judicial_Circuit_Court_District",
        "Judicial_County_Board_of_Review_District",
        "Judicial_County_Court_District",
        "Judicial_District",
        "Judicial_District_Court_District",
        "Judicial_Family_Court_District",
        "Judicial_Jury_District",
        "Judicial_Juvenile_Court_District",
        "Judicial_Magistrate_Division",
        "Judicial_Sub_Circuit_District",
        "Judicial_Superior_Court_District",
        "Judicial_Supreme_Court_District",
        "Middle_School_District",
        NULL AS "Municipal_Court_District",
        "Proposed_City_Commissioner_District",
        "Proposed_Elementary_School_District",
        "Proposed_Unified_School_District",
        "Regional_Office_of_Education_District",
        "School_Board_District",
        "School_District",
        "School_District_Vocational",
        "School_Facilities_Improvement_District",
        "School_Subdistrict",
        "Service_Area_District",
        "Superintendent_of_Schools_District",
        "Unified_School_District",
        "Unified_School_SubDistrict",
        "Coast_Water_District",
        "Consolidated_Water_District",
        "County_Water_District",
        "County_Water_Landowner_District",
        "County_Water_SubDistrict",
        "Metropolitan_Water_District",
        "Mountain_Water_District",
        "Municipal_Water_District",
        "Municipal_Water_SubDistrict",
        "River_Water_District",
        "Water_Agency",
        "Water_Agency_SubDistrict",
        "Water_Conservation_District",
        "Water_Conservation_SubDistrict",
        NULL AS "Water_Control__Water_Conservation",
        NULL AS "Water_Control__Water_Conservation_SubDistrict",
        "Water_District",
        "Water_Public_Utility_District",
        "Water_Public_Utility_Subdistrict",
        "Water_Replacement_District",
        "Water_Replacement_SubDistrict",
        "Water_SubDistrict",
        "County_Fire_District",
        "Fire_District",
        "Fire_Maintenance_District",
        "Fire_Protection_District",
        "Fire_Protection_SubDistrict",
        "Fire_Protection_Tax_Measure_District",
        "Fire_Service_Area_District",
        "Fire_SubDistrict",
        "Independent_Fire_District",
        "Proposed_Fire_District",
        "Unprotected_Fire_District",
        "Bay_Area_Rapid_Transit",
        "Metro_Transit_District",
        "Rapid_Transit_District",
        "Rapid_Transit_SubDistrict",
        "Transit_District",
        "Transit_SubDistrict",
        "Community_Service_District",
        "Community_Service_SubDistrict",
        "County_Service_Area",
        "County_Service_Area_SubDistrict",
        "TriCity_Service_District",
        "Library_Services_District",
        "Airport_District",
        "Annexation_District",
        "Aquatic_Center_District",
        "Aquatic_District",
        "Assessment_District",
        "Bonds_District",
        "Career_Center",
        "Cemetery_District",
        "Central_Committee_District",
        "Chemical_Control_District",
        "Committee_Super_District",
        "Communications_District",
        "Community_College_At_Large",
        "Community_Council_District",
        "Community_Council_SubDistrict",
        "Community_Facilities_District",
        "Community_Facilities_SubDistrict",
        "Community_Hospital_District",
        "Community_Planning_Area",
        "Congressional_Township",
        "Conservation_District",
        "Conservation_SubDistrict",
        "Control_Zone_District",
        "Corrections_District",
        "County_Hospital_District",
        "County_Library_District",
        "County_Memorial_District",
        "County_Paramedic_District",
        "County_Sewer_District",
        "Democratic_Convention_Member",
        "Democratic_Zone",
        "Designated_Market_Area_DMA",
        "Drainage_District",
        "Educational_Service_Subdistrict",
        "Emergency_Communication_911_District",
        "Emergency_Communication_911_SubDistrict",
        "Enterprise_Zone_District",
        "EXT_District",
        "Facilities_Improvement_District",
        "Flood_Control_Zone",
        "Forest_Preserve",
        "Garbage_District",
        "Geological_Hazard_Abatement_District",
        "Health_District",
        "Hospital_SubDistrict",
        "Improvement_Landowner_District",
        "Irrigation_District",
        "Irrigation_SubDistrict",
        "Island",
        "Land_Commission",
        NULL AS "Landscaping_And_Lighting_Assessment_Distric",
        "Law_Enforcement_District",
        "Learning_Community_Coordinating_Council_District",
        "Levee_District",
        "Levee_Reconstruction_Assesment_District",
        "Library_District",
        "Library_SubDistrict",
        "Lighting_District",
        "Local_Hospital_District",
        "Local_Park_District",
        "Maintenance_District",
        "Master_Plan_District",
        "Memorial_District",
        "Metro_Service_District",
        "Metro_Service_Subdistrict",
        "Mosquito_Abatement_District",
        "Multi_township_Assessor",
        "Municipal_Advisory_Council_District",
        "Municipal_Utility_District",
        "Municipal_Utility_SubDistrict",
        "Museum_District",
        "Northeast_Soil_and_Water_District",
        "Open_Space_District",
        "Open_Space_SubDistrict",
        "Other",
        "Paramedic_District",
        "Park_Commissioner_District",
        "Park_District",
        "Park_SubDistrict",
        "Planning_Area_District",
        "Police_District",
        "Port_District",
        "Port_SubDistrict",
        "Power_District",
        "Proposed_City",
        "Proposed_Community_College",
        "Proposed_District",
        "Public_Airport_District",
        "Public_Regulation_Commission",
        "Public_Service_Commission_District",
        "Public_Utility_District",
        "Public_Utility_SubDistrict",
        "Reclamation_District",
        "Recreation_District",
        "Recreational_SubDistrict",
        "Republican_Area",
        "Republican_Convention_Member",
        "Resort_Improvement_District",
        "Resource_Conservation_District",
        "Road_Maintenance_District",
        "Rural_Service_District",
        "Sanitary_District",
        "Sanitary_SubDistrict",
        "Sewer_District",
        "Sewer_Maintenance_District",
        "Sewer_SubDistrict",
        "Snow_Removal_District",
        NULL AS "Soil_And_Water_District",
        NULL AS "Soil_And_Water_District_At_Large",
        "Special_Reporting_District",
        "Special_Tax_District",
        "Storm_Water_District",
        "Street_Lighting_District",
        "TV_Translator_District",
        "Unincorporated_District",
        "Unincorporated_Park_District",
        "Ute_Creek_Soil_District",
        "Vector_Control_District",
        "Vote_By_Mail_Area",
        "Wastewater_District",
        "Weed_District"
    FROM {staging_schema}."{table_name}"
    ON CONFLICT ("LALVOTERID") DO UPDATE SET
        "Voters_Active" = EXCLUDED."Voters_Active",
        "Voters_StateVoterID" = EXCLUDED."Voters_StateVoterID",
        "Voters_CountyVoterID" = EXCLUDED."Voters_CountyVoterID",
        "VoterTelephones_LandlineFormatted" = EXCLUDED."VoterTelephones_LandlineFormatted",
        "VoterTelephones_LandlineConfidenceCode" = EXCLUDED."VoterTelephones_LandlineConfidenceCode",
        "VoterTelephones_CellPhoneFormatted" = EXCLUDED."VoterTelephones_CellPhoneFormatted",
        "VoterTelephones_CellConfidenceCode" = EXCLUDED."VoterTelephones_CellConfidenceCode",
        "Voters_FirstName" = EXCLUDED."Voters_FirstName",
        "Voters_MiddleName" = EXCLUDED."Voters_MiddleName",
        "Voters_LastName" = EXCLUDED."Voters_LastName",
        "Voters_NameSuffix" = EXCLUDED."Voters_NameSuffix",
        "Residence_Addresses_AddressLine" = EXCLUDED."Residence_Addresses_AddressLine",
        "Residence_Addresses_ExtraAddressLine" = EXCLUDED."Residence_Addresses_ExtraAddressLine",
        "Residence_Addresses_City" = EXCLUDED."Residence_Addresses_City",
        "Residence_Addresses_State" = EXCLUDED."Residence_Addresses_State",
        "Residence_Addresses_Zip" = EXCLUDED."Residence_Addresses_Zip",
        "Residence_Addresses_ZipPlus4" = EXCLUDED."Residence_Addresses_ZipPlus4",
        "Residence_Addresses_DPBC" = EXCLUDED."Residence_Addresses_DPBC",
        "Residence_Addresses_CheckDigit" = EXCLUDED."Residence_Addresses_CheckDigit",
        "Residence_Addresses_HouseNumber" = EXCLUDED."Residence_Addresses_HouseNumber",
        "Residence_Addresses_Designator" = EXCLUDED."Residence_Addresses_Designator",
        "Residence_Addresses_SuffixDirection" = EXCLUDED."Residence_Addresses_SuffixDirection",
        "Residence_Addresses_ApartmentNum" = EXCLUDED."Residence_Addresses_ApartmentNum",
        "Residence_Addresses_ApartmentType" = EXCLUDED."Residence_Addresses_ApartmentType",
        "Residence_Addresses_CassErrStatCode" = EXCLUDED."Residence_Addresses_CassErrStatCode",
        "Voters_SequenceZigZag" = EXCLUDED."Voters_SequenceZigZag",
        "Voters_SequenceOddEven" = EXCLUDED."Voters_SequenceOddEven",
        "Residence_Addresses_Latitude" = EXCLUDED."Residence_Addresses_Latitude",
        "Residence_Addresses_Longitude" = EXCLUDED."Residence_Addresses_Longitude",
        "Residence_Addresses_GeoHash" = EXCLUDED."Residence_Addresses_GeoHash",
        "Residence_Addresses_LatLongAccuracy" = EXCLUDED."Residence_Addresses_LatLongAccuracy",
        "Residence_HHParties_Description" = EXCLUDED."Residence_HHParties_Description",
        "Mailing_Addresses_AddressLine" = EXCLUDED."Mailing_Addresses_AddressLine",
        "Mailing_Addresses_ExtraAddressLine" = EXCLUDED."Mailing_Addresses_ExtraAddressLine",
        "Mailing_Addresses_City" = EXCLUDED."Mailing_Addresses_City",
        "Mailing_Addresses_State" = EXCLUDED."Mailing_Addresses_State",
        "Mailing_Addresses_Zip" = EXCLUDED."Mailing_Addresses_Zip",
        "Mailing_Addresses_ZipPlus4" = EXCLUDED."Mailing_Addresses_ZipPlus4",
        "Mailing_Addresses_DPBC" = EXCLUDED."Mailing_Addresses_DPBC",
        "Mailing_Addresses_CheckDigit" = EXCLUDED."Mailing_Addresses_CheckDigit",
        "Mailing_Addresses_HouseNumber" = EXCLUDED."Mailing_Addresses_HouseNumber",
        "Mailing_Addresses_PrefixDirection" = EXCLUDED."Mailing_Addresses_PrefixDirection",
        "Mailing_Addresses_StreetName" = EXCLUDED."Mailing_Addresses_StreetName",
        "Mailing_Addresses_Designator" = EXCLUDED."Mailing_Addresses_Designator",
        "Mailing_Addresses_SuffixDirection" = EXCLUDED."Mailing_Addresses_SuffixDirection",
        "Mailing_Addresses_ApartmentNum" = EXCLUDED."Mailing_Addresses_ApartmentNum",
        "Mailing_Addresses_ApartmentType" = EXCLUDED."Mailing_Addresses_ApartmentType",
        "Mailing_Addresses_CassErrStatCode" = EXCLUDED."Mailing_Addresses_CassErrStatCode",
        "Mailing_Families_FamilyID" = EXCLUDED."Mailing_Families_FamilyID",
        "Mailing_Families_HHCount" = EXCLUDED."Mailing_Families_HHCount",
        "Mailing_HHGender_Description" = EXCLUDED."Mailing_HHGender_Description",
        "Mailing_HHParties_Description" = EXCLUDED."Mailing_HHParties_Description",
        "Voters_Age" = EXCLUDED."Voters_Age",
        "Voters_Gender" = EXCLUDED."Voters_Gender",
        "DateConfidence_Description" = EXCLUDED."DateConfidence_Description",
        "Parties_Description" = EXCLUDED."Parties_Description",
        "VoterParties_Change_Changed_Party" = EXCLUDED."VoterParties_Change_Changed_Party",
        "Ethnic_Description" = EXCLUDED."Ethnic_Description",
        "EthnicGroups_EthnicGroup1Desc" = EXCLUDED."EthnicGroups_EthnicGroup1Desc",
        "CountyEthnic_LALEthnicCode" = EXCLUDED."CountyEthnic_LALEthnicCode",
        "CountyEthnic_Description" = EXCLUDED."CountyEthnic_Description",
        "Religions_Description" = EXCLUDED."Religions_Description",
        "Voters_CalculatedRegDate" = EXCLUDED."Voters_CalculatedRegDate",
        "Voters_OfficialRegDate" = EXCLUDED."Voters_OfficialRegDate",
        "Voters_PlaceOfBirth" = EXCLUDED."Voters_PlaceOfBirth",
        "Languages_Description" = EXCLUDED."Languages_Description",
        "AbsenteeTypes_Description" = EXCLUDED."AbsenteeTypes_Description",
        "MilitaryStatus_Description" = EXCLUDED."MilitaryStatus_Description",
        "MaritalStatus_Description" = EXCLUDED."MaritalStatus_Description",
        "Voters_MovedFrom_State" = EXCLUDED."Voters_MovedFrom_State",
        "Voters_MovedFrom_Date" = EXCLUDED."Voters_MovedFrom_Date",
        "Voters_MovedFrom_Party_Description" = EXCLUDED."Voters_MovedFrom_Party_Description",
        "Voters_VotingPerformanceEvenYearGeneral" = EXCLUDED."Voters_VotingPerformanceEvenYearGeneral",
        "Voters_VotingPerformanceEvenYearPrimary" = EXCLUDED."Voters_VotingPerformanceEvenYearPrimary",
        "Voters_VotingPerformanceEvenYearGeneralAndPrimary" = EXCLUDED."Voters_VotingPerformanceEvenYearGeneralAndPrimary",
        "Voters_VotingPerformanceMinorElection" = EXCLUDED."Voters_VotingPerformanceMinorElection",
        "General_2026" = EXCLUDED."General_2026",
        "Primary_2026" = EXCLUDED."Primary_2026",
        "OtherElection_2026" = EXCLUDED."OtherElection_2026",
        "AnyElection_2025" = EXCLUDED."AnyElection_2025",
        "General_2024" = EXCLUDED."General_2024",
        "Primary_2024" = EXCLUDED."Primary_2024",
        "PresidentialPrimary_2024" = EXCLUDED."PresidentialPrimary_2024",
        "OtherElection_2024" = EXCLUDED."OtherElection_2024",
        "AnyElection_2023" = EXCLUDED."AnyElection_2023",
        "General_2022" = EXCLUDED."General_2022",
        "Primary_2022" = EXCLUDED."Primary_2022",
        "OtherElection_2022" = EXCLUDED."OtherElection_2022",
        "AnyElection_2021" = EXCLUDED."AnyElection_2021",
        "General_2020" = EXCLUDED."General_2020",
        "Primary_2020" = EXCLUDED."Primary_2020",
        "PresidentialPrimary_2020" = EXCLUDED."PresidentialPrimary_2020",
        "OtherElection_2020" = EXCLUDED."OtherElection_2020",
        "AnyElection_2019" = EXCLUDED."AnyElection_2019",
        "General_2018" = EXCLUDED."General_2018",
        "Primary_2018" = EXCLUDED."Primary_2018",
        "OtherElection_2018" = EXCLUDED."OtherElection_2018",
        "AnyElection_2017" = EXCLUDED."AnyElection_2017",
        "General_2016" = EXCLUDED."General_2016",
        "Primary_2016" = EXCLUDED."Primary_2016",
        "PresidentialPrimary_2016" = EXCLUDED."PresidentialPrimary_2016",
        "OtherElection_2016" = EXCLUDED."OtherElection_2016",
        "US_Congressional_District" = EXCLUDED."US_Congressional_District",
        "AddressDistricts_Change_Changed_CD" = EXCLUDED."AddressDistricts_Change_Changed_CD",
        "State_Senate_District" = EXCLUDED."State_Senate_District",
        "AddressDistricts_Change_Changed_SD" = EXCLUDED."AddressDistricts_Change_Changed_SD",
        "State_House_District" = EXCLUDED."State_House_District",
        "AddressDistricts_Change_Changed_HD" = EXCLUDED."AddressDistricts_Change_Changed_HD",
        "State_Legislative_District" = EXCLUDED."State_Legislative_District",
        "AddressDistricts_Change_Changed_LD" = EXCLUDED."AddressDistricts_Change_Changed_LD",
        "County" = EXCLUDED."County",
        "Voters_FIPS" = EXCLUDED."Voters_FIPS",
        "AddressDistricts_Change_Changed_County" = EXCLUDED."AddressDistricts_Change_Changed_County",
        "Precinct" = EXCLUDED."Precinct",
        "County_Legislative_District" = EXCLUDED."County_Legislative_District",
        "City" = EXCLUDED."City",
        "City_Council_Commissioner_District" = EXCLUDED."City_Council_Commissioner_District",
        "County_Commissioner_District" = EXCLUDED."County_Commissioner_District",
        "County_Supervisorial_District" = EXCLUDED."County_Supervisorial_District",
        "City_Mayoral_District" = EXCLUDED."City_Mayoral_District",
        "Town_District" = EXCLUDED."Town_District",
        "Town_Council" = EXCLUDED."Town_Council",
        "Village" = EXCLUDED."Village",
        "Township" = EXCLUDED."Township",
        "Borough" = EXCLUDED."Borough",
        "Hamlet_Community_Area" = EXCLUDED."Hamlet_Community_Area",
        "City_Ward" = EXCLUDED."City_Ward",
        "Town_Ward" = EXCLUDED."Town_Ward",
        "Township_Ward" = EXCLUDED."Township_Ward",
        "Village_Ward" = EXCLUDED."Village_Ward",
        "Borough_Ward" = EXCLUDED."Borough_Ward",
        "Board_of_Education_District" = EXCLUDED."Board_of_Education_District",
        "Board_of_Education_SubDistrict" = EXCLUDED."Board_of_Education_SubDistrict",
        "City_School_District" = EXCLUDED."City_School_District",
        "College_Board_District" = EXCLUDED."College_Board_District",
        "Community_College_Commissioner_District" = EXCLUDED."Community_College_Commissioner_District",
        "Community_College_SubDistrict" = EXCLUDED."Community_College_SubDistrict",
        "County_Board_of_Education_District" = EXCLUDED."County_Board_of_Education_District",
        "County_Board_of_Education_SubDistrict" = EXCLUDED."County_Board_of_Education_SubDistrict",
        "County_Community_College_District" = EXCLUDED."County_Community_College_District",
        "County_Superintendent_of_Schools_District" = EXCLUDED."County_Superintendent_of_Schools_District",
        "County_Unified_School_District" = EXCLUDED."County_Unified_School_District",
        "District_Attorney" = EXCLUDED."District_Attorney",
        "Education_Commission_District" = EXCLUDED."Education_Commission_District",
        "Educational_Service_District" = EXCLUDED."Educational_Service_District",
        "Election_Commissioner_District" = EXCLUDED."Election_Commissioner_District",
        "Elementary_School_District" = EXCLUDED."Elementary_School_District",
        "Elementary_School_SubDistrict" = EXCLUDED."Elementary_School_SubDistrict",
        "Exempted_Village_School_District" = EXCLUDED."Exempted_Village_School_District",
        "High_School_District" = EXCLUDED."High_School_District",
        "High_School_SubDistrict" = EXCLUDED."High_School_SubDistrict",
        "Judicial_Appellate_District" = EXCLUDED."Judicial_Appellate_District",
        "Judicial_Circuit_Court_District" = EXCLUDED."Judicial_Circuit_Court_District",
        "Judicial_County_Board_of_Review_District" = EXCLUDED."Judicial_County_Board_of_Review_District",
        "Judicial_County_Court_District" = EXCLUDED."Judicial_County_Court_District",
        "Judicial_District" = EXCLUDED."Judicial_District",
        "Judicial_District_Court_District" = EXCLUDED."Judicial_District_Court_District",
        "Judicial_Family_Court_District" = EXCLUDED."Judicial_Family_Court_District",
        "Judicial_Jury_District" = EXCLUDED."Judicial_Jury_District",
        "Judicial_Juvenile_Court_District" = EXCLUDED."Judicial_Juvenile_Court_District",
        "Judicial_Magistrate_Division" = EXCLUDED."Judicial_Magistrate_Division",
        "Judicial_Sub_Circuit_District" = EXCLUDED."Judicial_Sub_Circuit_District",
        "Judicial_Superior_Court_District" = EXCLUDED."Judicial_Superior_Court_District",
        "Judicial_Supreme_Court_District" = EXCLUDED."Judicial_Supreme_Court_District",
        "Middle_School_District" = EXCLUDED."Middle_School_District",
        "Municipal_Court_District" = EXCLUDED."Municipal_Court_District",
        "Proposed_City_Commissioner_District" = EXCLUDED."Proposed_City_Commissioner_District",
        "Proposed_Elementary_School_District" = EXCLUDED."Proposed_Elementary_School_District",
        "Proposed_Unified_School_District" = EXCLUDED."Proposed_Unified_School_District",
        "Regional_Office_of_Education_District" = EXCLUDED."Regional_Office_of_Education_District",
        "School_Board_District" = EXCLUDED."School_Board_District",
        "School_District" = EXCLUDED."School_District",
        "School_District_Vocational" = EXCLUDED."School_District_Vocational",
        "School_Facilities_Improvement_District" = EXCLUDED."School_Facilities_Improvement_District",
        "School_Subdistrict" = EXCLUDED."School_Subdistrict",
        "Service_Area_District" = EXCLUDED."Service_Area_District",
        "Superintendent_of_Schools_District" = EXCLUDED."Superintendent_of_Schools_District",
        "Unified_School_District" = EXCLUDED."Unified_School_District",
        "Unified_School_SubDistrict" = EXCLUDED."Unified_School_SubDistrict",
        "Coast_Water_District" = EXCLUDED."Coast_Water_District",
        "Consolidated_Water_District" = EXCLUDED."Consolidated_Water_District",
        "County_Water_District" = EXCLUDED."County_Water_District",
        "County_Water_Landowner_District" = EXCLUDED."County_Water_Landowner_District",
        "County_Water_SubDistrict" = EXCLUDED."County_Water_SubDistrict",
        "Metropolitan_Water_District" = EXCLUDED."Metropolitan_Water_District",
        "Mountain_Water_District" = EXCLUDED."Mountain_Water_District",
        "Municipal_Water_District" = EXCLUDED."Municipal_Water_District",
        "Municipal_Water_SubDistrict" = EXCLUDED."Municipal_Water_SubDistrict",
        "River_Water_District" = EXCLUDED."River_Water_District",
        "Water_Agency" = EXCLUDED."Water_Agency",
        "Water_Agency_SubDistrict" = EXCLUDED."Water_Agency_SubDistrict",
        "Water_Conservation_District" = EXCLUDED."Water_Conservation_District",
        "Water_Conservation_SubDistrict" = EXCLUDED."Water_Conservation_SubDistrict",
        "Water_Control__Water_Conservation" = EXCLUDED."Water_Control__Water_Conservation",
        "Water_Control__Water_Conservation_SubDistrict" = EXCLUDED."Water_Control__Water_Conservation_SubDistrict",
        "Water_District" = EXCLUDED."Water_District",
        "Water_Public_Utility_District" = EXCLUDED."Water_Public_Utility_District",
        "Water_Public_Utility_Subdistrict" = EXCLUDED."Water_Public_Utility_Subdistrict",
        "Water_Replacement_District" = EXCLUDED."Water_Replacement_District",
        "Water_Replacement_SubDistrict" = EXCLUDED."Water_Replacement_SubDistrict",
        "Water_SubDistrict" = EXCLUDED."Water_SubDistrict",
        "County_Fire_District" = EXCLUDED."County_Fire_District",
        "Fire_District" = EXCLUDED."Fire_District",
        "Fire_Maintenance_District" = EXCLUDED."Fire_Maintenance_District",
        "Fire_Protection_District" = EXCLUDED."Fire_Protection_District",
        "Fire_Protection_SubDistrict" = EXCLUDED."Fire_Protection_SubDistrict",
        "Fire_Protection_Tax_Measure_District" = EXCLUDED."Fire_Protection_Tax_Measure_District",
        "Fire_Service_Area_District" = EXCLUDED."Fire_Service_Area_District",
        "Fire_SubDistrict" = EXCLUDED."Fire_SubDistrict",
        "Independent_Fire_District" = EXCLUDED."Independent_Fire_District",
        "Proposed_Fire_District" = EXCLUDED."Proposed_Fire_District",
        "Unprotected_Fire_District" = EXCLUDED."Unprotected_Fire_District",
        "Bay_Area_Rapid_Transit" = EXCLUDED."Bay_Area_Rapid_Transit",
        "Metro_Transit_District" = EXCLUDED."Metro_Transit_District",
        "Rapid_Transit_District" = EXCLUDED."Rapid_Transit_District",
        "Rapid_Transit_SubDistrict" = EXCLUDED."Rapid_Transit_SubDistrict",
        "Transit_District" = EXCLUDED."Transit_District",
        "Transit_SubDistrict" = EXCLUDED."Transit_SubDistrict",
        "Community_Service_District" = EXCLUDED."Community_Service_District",
        "Community_Service_SubDistrict" = EXCLUDED."Community_Service_SubDistrict",
        "County_Service_Area" = EXCLUDED."County_Service_Area",
        "County_Service_Area_SubDistrict" = EXCLUDED."County_Service_Area_SubDistrict",
        "TriCity_Service_District" = EXCLUDED."TriCity_Service_District",
        "Library_Services_District" = EXCLUDED."Library_Services_District",
        "Airport_District" = EXCLUDED."Airport_District",
        "Annexation_District" = EXCLUDED."Annexation_District",
        "Aquatic_Center_District" = EXCLUDED."Aquatic_Center_District",
        "Aquatic_District" = EXCLUDED."Aquatic_District",
        "Assessment_District" = EXCLUDED."Assessment_District",
        "Bonds_District" = EXCLUDED."Bonds_District",
        "Career_Center" = EXCLUDED."Career_Center",
        "Cemetery_District" = EXCLUDED."Cemetery_District",
        "Central_Committee_District" = EXCLUDED."Central_Committee_District",
        "Chemical_Control_District" = EXCLUDED."Chemical_Control_District",
        "Committee_Super_District" = EXCLUDED."Committee_Super_District",
        "Communications_District" = EXCLUDED."Communications_District",
        "Community_College_At_Large" = EXCLUDED."Community_College_At_Large",
        "Community_Council_District" = EXCLUDED."Community_Council_District",
        "Community_Council_SubDistrict" = EXCLUDED."Community_Council_SubDistrict",
        "Community_Facilities_District" = EXCLUDED."Community_Facilities_District",
        "Community_Facilities_SubDistrict" = EXCLUDED."Community_Facilities_SubDistrict",
        "Community_Hospital_District" = EXCLUDED."Community_Hospital_District",
        "Community_Planning_Area" = EXCLUDED."Community_Planning_Area",
        "Congressional_Township" = EXCLUDED."Congressional_Township",
        "Conservation_District" = EXCLUDED."Conservation_District",
        "Conservation_SubDistrict" = EXCLUDED."Conservation_SubDistrict",
        "Control_Zone_District" = EXCLUDED."Control_Zone_District",
        "Corrections_District" = EXCLUDED."Corrections_District",
        "County_Hospital_District" = EXCLUDED."County_Hospital_District",
        "County_Library_District" = EXCLUDED."County_Library_District",
        "County_Memorial_District" = EXCLUDED."County_Memorial_District",
        "County_Paramedic_District" = EXCLUDED."County_Paramedic_District",
        "County_Sewer_District" = EXCLUDED."County_Sewer_District",
        "Democratic_Convention_Member" = EXCLUDED."Democratic_Convention_Member",
        "Democratic_Zone" = EXCLUDED."Democratic_Zone",
        "Designated_Market_Area_DMA" = EXCLUDED."Designated_Market_Area_DMA",
        "Drainage_District" = EXCLUDED."Drainage_District",
        "Educational_Service_Subdistrict" = EXCLUDED."Educational_Service_Subdistrict",
        "Emergency_Communication_911_District" = EXCLUDED."Emergency_Communication_911_District",
        "Emergency_Communication_911_SubDistrict" = EXCLUDED."Emergency_Communication_911_SubDistrict",
        "Enterprise_Zone_District" = EXCLUDED."Enterprise_Zone_District",
        "EXT_District" = EXCLUDED."EXT_District",
        "Facilities_Improvement_District" = EXCLUDED."Facilities_Improvement_District",
        "Flood_Control_Zone" = EXCLUDED."Flood_Control_Zone",
        "Forest_Preserve" = EXCLUDED."Forest_Preserve",
        "Garbage_District" = EXCLUDED."Garbage_District",
        "Geological_Hazard_Abatement_District" = EXCLUDED."Geological_Hazard_Abatement_District",
        "Health_District" = EXCLUDED."Health_District",
        "Hospital_SubDistrict" = EXCLUDED."Hospital_SubDistrict",
        "Improvement_Landowner_District" = EXCLUDED."Improvement_Landowner_District",
        "Irrigation_District" = EXCLUDED."Irrigation_District",
        "Irrigation_SubDistrict" = EXCLUDED."Irrigation_SubDistrict",
        "Island" = EXCLUDED."Island",
        "Land_Commission" = EXCLUDED."Land_Commission",
        "Landscaping_And_Lighting_Assessment_Distric" = EXCLUDED."Landscaping_And_Lighting_Assessment_Distric",
        "Law_Enforcement_District" = EXCLUDED."Law_Enforcement_District",
        "Learning_Community_Coordinating_Council_District" = EXCLUDED."Learning_Community_Coordinating_Council_District",
        "Levee_District" = EXCLUDED."Levee_District",
        "Levee_Reconstruction_Assesment_District" = EXCLUDED."Levee_Reconstruction_Assesment_District",
        "Library_District" = EXCLUDED."Library_District",
        "Library_SubDistrict" = EXCLUDED."Library_SubDistrict",
        "Lighting_District" = EXCLUDED."Lighting_District",
        "Local_Hospital_District" = EXCLUDED."Local_Hospital_District",
        "Local_Park_District" = EXCLUDED."Local_Park_District",
        "Maintenance_District" = EXCLUDED."Maintenance_District",
        "Master_Plan_District" = EXCLUDED."Master_Plan_District",
        "Memorial_District" = EXCLUDED."Memorial_District",
        "Metro_Service_District" = EXCLUDED."Metro_Service_District",
        "Metro_Service_Subdistrict" = EXCLUDED."Metro_Service_Subdistrict",
        "Mosquito_Abatement_District" = EXCLUDED."Mosquito_Abatement_District",
        "Multi_township_Assessor" = EXCLUDED."Multi_township_Assessor",
        "Municipal_Advisory_Council_District" = EXCLUDED."Municipal_Advisory_Council_District",
        "Municipal_Utility_District" = EXCLUDED."Municipal_Utility_District",
        "Municipal_Utility_SubDistrict" = EXCLUDED."Municipal_Utility_SubDistrict",
        "Museum_District" = EXCLUDED."Museum_District",
        "Northeast_Soil_and_Water_District" = EXCLUDED."Northeast_Soil_and_Water_District",
        "Open_Space_District" = EXCLUDED."Open_Space_District",
        "Open_Space_SubDistrict" = EXCLUDED."Open_Space_SubDistrict",
        "Other" = EXCLUDED."Other",
        "Paramedic_District" = EXCLUDED."Paramedic_District",
        "Park_Commissioner_District" = EXCLUDED."Park_Commissioner_District",
        "Park_District" = EXCLUDED."Park_District",
        "Park_SubDistrict" = EXCLUDED."Park_SubDistrict",
        "Planning_Area_District" = EXCLUDED."Planning_Area_District",
        "Police_District" = EXCLUDED."Police_District",
        "Port_District" = EXCLUDED."Port_District",
        "Port_SubDistrict" = EXCLUDED."Port_SubDistrict",
        "Power_District" = EXCLUDED."Power_District",
        "Proposed_City" = EXCLUDED."Proposed_City",
        "Proposed_Community_College" = EXCLUDED."Proposed_Community_College",
        "Proposed_District" = EXCLUDED."Proposed_District",
        "Public_Airport_District" = EXCLUDED."Public_Airport_District",
        "Public_Regulation_Commission" = EXCLUDED."Public_Regulation_Commission",
        "Public_Service_Commission_District" = EXCLUDED."Public_Service_Commission_District",
        "Public_Utility_District" = EXCLUDED."Public_Utility_District",
        "Public_Utility_SubDistrict" = EXCLUDED."Public_Utility_SubDistrict",
        "Reclamation_District" = EXCLUDED."Reclamation_District",
        "Recreation_District" = EXCLUDED."Recreation_District",
        "Recreational_SubDistrict" = EXCLUDED."Recreational_SubDistrict",
        "Republican_Area" = EXCLUDED."Republican_Area",
        "Republican_Convention_Member" = EXCLUDED."Republican_Convention_Member",
        "Resort_Improvement_District" = EXCLUDED."Resort_Improvement_District",
        "Resource_Conservation_District" = EXCLUDED."Resource_Conservation_District",
        "Road_Maintenance_District" = EXCLUDED."Road_Maintenance_District",
        "Rural_Service_District" = EXCLUDED."Rural_Service_District",
        "Sanitary_District" = EXCLUDED."Sanitary_District",
        "Sanitary_SubDistrict" = EXCLUDED."Sanitary_SubDistrict",
        "Sewer_District" = EXCLUDED."Sewer_District",
        "Sewer_Maintenance_District" = EXCLUDED."Sewer_Maintenance_District",
        "Sewer_SubDistrict" = EXCLUDED."Sewer_SubDistrict",
        "Snow_Removal_District" = EXCLUDED."Snow_Removal_District",
        "Soil_And_Water_District" = EXCLUDED."Soil_And_Water_District",
        "Soil_And_Water_District_At_Large" = EXCLUDED."Soil_And_Water_District_At_Large",
        "Special_Reporting_District" = EXCLUDED."Special_Reporting_District",
        "Special_Tax_District" = EXCLUDED."Special_Tax_District",
        "Storm_Water_District" = EXCLUDED."Storm_Water_District",
        "Street_Lighting_District" = EXCLUDED."Street_Lighting_District",
        "TV_Translator_District" = EXCLUDED."TV_Translator_District",
        "Unincorporated_District" = EXCLUDED."Unincorporated_District",
        "Unincorporated_Park_District" = EXCLUDED."Unincorporated_Park_District",
        "Ute_Creek_Soil_District" = EXCLUDED."Ute_Creek_Soil_District",
        "Vector_Control_District" = EXCLUDED."Vector_Control_District",
        "Vote_By_Mail_Area" = EXCLUDED."Vote_By_Mail_Area",
        "Wastewater_District" = EXCLUDED."Wastewater_District",
        "Weed_District" = EXCLUDED."Weed_District"
"""


def _execute_sql_query(
    query: str,
    host: str,
    port: int,
    user: str,
    password: str,
    database: str,
    return_results: bool = False,
) -> List[Tuple[Any, ...]]:
    """
    Execute a SQL query and return the results. Not that the results should be None if no results are returned.
    """
    try:
        conn = psycopg2.connect(
            dbname=database, user=user, password=password, host=host, port=port
        )
        cursor = conn.cursor()
        cursor.execute(query)
        if return_results:
            results = cursor.fetchall() if cursor.rowcount > 0 else []
        else:
            results = []
        conn.commit()
    except Exception as e:
        logging.error(f"Error executing query: {query}")
        logging.error(f"Error: {e}")
        raise e
    finally:
        cursor.close()
        conn.close()

    return results


def _load_data_to_postgres(
    df: DataFrame,
    state_id: str,
    source_file_name: str,
    upsert_query: str,
    db_host: str,
    db_port: int,
    db_user: str,
    db_pw: str,
    db_name: str,
    staging_schema: str,
    db_schema: str,
) -> int:
    """
    Load a DataFrame to PostgreSQL via JDBC and execute an upsert query.

    Args:
        df: DataFrame to load
        state_id: State ID
        source_file_name: Name of the source file
        upsert_query: SQL query to execute for upserting data from staging to the target table
        db_host: Database host
        db_port: Database port
        db_user: Database user
        db_pw: Database password
        db_name: Database name
        staging_schema: Schema for staging tables
        db_schema: Target schema for the final tables

    Returns:
        Number of rows loaded
    """
    table_name = f"Voter{state_id.upper()}"
    logging.info(f"Writing {table_name} data to PostgreSQL via JDBC")

    # Construct JDBC URL
    jdbc_url = f"jdbc:postgresql://{db_host}:{db_port}/{db_name}"

    # Add a row index for chunking to prevent data load hangups
    df = df.withColumn("row_id", monotonically_increasing_id())
    chunk_size = 100_000  # 100,000 rows per chunk
    total_rows = df.count()

    for start in range(0, total_rows, chunk_size):
        if start == 0:
            mode = "overwrite"
        else:
            mode = "append"
        chunk_df = df.filter(
            (col("row_id") >= start) & (col("row_id") < start + chunk_size)
        ).drop("row_id")
        chunk_df.write.format("jdbc").option("url", jdbc_url).option(
            "dbtable", f'{staging_schema}."{table_name}"'
        ).option("user", db_user).option("password", db_pw).option(
            "driver", "org.postgresql.Driver"
        ).option(
            "batchsize", 1000
        ).option(
            "reWriteBatchedInserts", "true"
        ).mode(
            mode
        ).save()

    # make a wake up call to the database
    _execute_sql_query(
        f'SELECT * FROM "{staging_schema}"."{table_name}" LIMIT 1;',
        db_host,
        db_port,
        db_user,
        db_pw,
        db_name,
        return_results=False,
    )

    # Execute the upsert query to the destination table
    _execute_sql_query(
        upsert_query.format(
            db_schema=db_schema, staging_schema=staging_schema, table_name=table_name
        ),
        db_host,
        db_port,
        db_user,
        db_pw,
        db_name,
    )

    # number of rows loaded
    num_rows_loaded = df.count()

    # load the source file name to the destination table
    _execute_sql_query(
        f"""
        INSERT INTO {db_schema}."VoterFile" (
            "Filename",
            "State",
            "Lines",
            "Loaded",
            "updatedAt"
        )
        VALUES (
            '{source_file_name}',
            '{state_id}',
            {num_rows_loaded},
            true,
            CURRENT_TIMESTAMP
        )
        ON CONFLICT ("Filename") DO UPDATE SET
            "Lines" = EXCLUDED."Lines",
            "Loaded" = EXCLUDED."Loaded",
            "updatedAt" = CURRENT_TIMESTAMP
        """,
        db_host,
        db_port,
        db_user,
        db_pw,
        db_name,
    )

    return num_rows_loaded


def model(dbt, session: SparkSession) -> DataFrame:
    """
    This model loads data from Databricks to the voter db in gp-api.
    It is used to load the data from the Databricks tables to the gp-api database.
    """
    dbt.config(
        submission_method="all_purpose_cluster",
        http_path="sql/protocolv1/o/3578414625112071/0409-211859-6hzpukya",
        materialized="incremental",
        incremental_strategy="append",
        unique_key="id",
        on_schema_change="fail",
        tags=["l2", "databricks", "gp-api", "load"],
    )

    # get dbt configs
    staging_schema = dbt.config.get("staging_schema")
    db_host = dbt.config.get("voter_db_host")
    db_port = int(dbt.config.get("voter_db_port"))
    db_user = dbt.config.get("voter_db_user")
    db_pw = dbt.config.get("voter_db_pw")
    db_name = dbt.config.get("voter_db_name")
    db_schema = dbt.config.get("voter_db_schema")

    # get latest files loaded to databricks, filtering for uniform files
    loaded_to_databricks = dbt.ref("load__l2_s3_to_databricks").filter(
        col("source_file_type") == "uniform"
    )
    state_list = [
        row.state_id
        for row in loaded_to_databricks.select("state_id").distinct().collect()
    ]

    # for testing, only load for one state
    state_list = ["WY"]

    # initialize list to capture metadata about data loads
    load_details: List[Dict[str, Any]] = []

    # Create a staging schema if it doesn't exist
    _execute_sql_query(
        f"CREATE SCHEMA IF NOT EXISTS {staging_schema};",
        db_host,
        db_port,
        db_user,
        db_pw,
        db_name,
    )

    for state_id in state_list:
        state_files_loaded = loaded_to_databricks.filter(col("state_id") == state_id)

        # order by loaded_at descending and take the first row
        latest_file = state_files_loaded.orderBy(col("loaded_at").desc()).first()

        # check if it's already loaded or not. If so, skip.
        query = f"""
            SELECT COUNT(*) FROM {db_schema}."VoterFile"
            WHERE "Filename" = '{latest_file.source_file_name}'
        """
        results = _execute_sql_query(
            query, db_host, db_port, db_user, db_pw, db_name, return_results=True
        )
        if results[0][0] > 0:
            continue

        # write to destination postgres table
        df = session.read.table(latest_file.table_path)
        # safe_cast the integer columns
        df = (
            df.withColumn(
                "Residence_Addresses_CheckDigit",
                col("Residence_Addresses_CheckDigit").try_cast("int"),
            )
            .withColumn(
                "Residence_Addresses_HouseNumber",
                col("Residence_Addresses_HouseNumber").try_cast("int"),
            )
            .withColumn(
                "Residence_Addresses_SuffixDirection",
                col("Residence_Addresses_SuffixDirection").try_cast("int"),
            )
            .withColumn(
                "Mailing_Addresses_CheckDigit",
                col("Mailing_Addresses_CheckDigit").try_cast("int"),
            )
            .withColumn(
                "Mailing_Addresses_HouseNumber",
                col("Mailing_Addresses_HouseNumber").try_cast("int"),
            )
            .withColumn(
                "Mailing_Addresses_PrefixDirection",
                col("Mailing_Addresses_PrefixDirection").try_cast("int"),
            )
            .withColumn(
                "Mailing_Addresses_SuffixDirection",
                col("Mailing_Addresses_SuffixDirection").try_cast("int"),
            )
        )
        num_rows_loaded = _load_data_to_postgres(
            df=df,
            state_id=state_id,
            source_file_name=latest_file.source_file_name,
            upsert_query=UPSERT_QUERY,
            db_host=db_host,
            db_port=db_port,
            db_user=db_user,
            db_pw=db_pw,
            db_name=db_name,
            staging_schema=staging_schema,
            db_schema=db_schema,
        )

        # add to load_details
        load_details.append(
            {
                "id": latest_file.id,
                "load_id": latest_file.load_id,
                "loaded_at": latest_file.loaded_at,
                "state_id": state_id,
                "source_s3_path": latest_file.source_s3_path,
                "source_file_name": latest_file.source_file_name,
                "source_file_type": latest_file.source_file_type,
                "table_name": f"Voter{state_id.upper()}",
                "num_rows_loaded": num_rows_loaded,
            }
        )

    load_details_schema = StructType(
        [
            StructField("id", StringType(), True),
            StructField("load_id", StringType(), True),
            StructField("loaded_at", TimestampType(), True),
            StructField("state_id", StringType(), True),
            StructField("source_s3_path", StringType(), True),
            StructField("source_file_name", StringType(), True),
            StructField("source_file_type", StringType(), True),
            StructField("table_name", StringType(), True),
            StructField("num_rows_loaded", IntegerType(), True),
        ]
    )
    load_details_df = session.createDataFrame(load_details, load_details_schema)
    return load_details_df
